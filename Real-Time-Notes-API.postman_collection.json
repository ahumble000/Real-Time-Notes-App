{
  "info": {
    "name": "Real-Time Notes API",
    "description": "API collection for the Real-Time Collaborative Notes application",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.collectionVariables.set(\"authToken\", responseJson.token);",
                  "    pm.test(\"Registration successful\", function () {",
                  "        pm.expect(responseJson.message).to.include(\"created successfully\");",
                  "        pm.expect(responseJson.token).to.be.a('string');",
                  "        pm.expect(responseJson.user).to.have.property('username');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.collectionVariables.set(\"authToken\", responseJson.token);",
                  "    pm.test(\"Login successful\", function () {",
                  "        pm.expect(responseJson.message).to.include(\"successful\");",
                  "        pm.expect(responseJson.token).to.be.a('string');",
                  "        pm.expect(responseJson.user).to.have.property('username');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Get user info successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.user).to.have.property('username');",
                  "    pm.expect(responseJson.user).to.have.property('email');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Logout User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Notes",
      "item": [
        {
          "name": "Create Note",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"My First Note\",\n  \"content\": \"This is the content of my first note. It supports **markdown** formatting!\",\n  \"isPublic\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/notes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.collectionVariables.set(\"noteId\", responseJson._id);",
                  "    pm.test(\"Note created successfully\", function () {",
                  "        pm.expect(responseJson).to.have.property('title');",
                  "        pm.expect(responseJson).to.have.property('content');",
                  "        pm.expect(responseJson).to.have.property('isPublic');",
                  "        pm.expect(responseJson).to.have.property('author');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Public Notes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/notes/public?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes", "public"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": "test",
                  "disabled": true
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Get public notes successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('notes');",
                  "    pm.expect(responseJson).to.have.property('pagination');",
                  "    pm.expect(responseJson.notes).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Private Notes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notes/private?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes", "private"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get My Notes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notes/my",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes", "my"]
            }
          }
        },
        {
          "name": "Get Single Note",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notes/{{noteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes", "{{noteId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Get note successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('title');",
                  "    pm.expect(responseJson).to.have.property('content');",
                  "    pm.expect(responseJson).to.have.property('author');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Note",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Note Title\",\n  \"content\": \"This note has been updated with new content!\",\n  \"isPublic\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/notes/{{noteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes", "{{noteId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Note updated successfully\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.title).to.equal(\"Updated Note Title\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Search Notes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/notes/public?search=updated",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes", "public"],
              "query": [
                {
                  "key": "search",
                  "value": "updated"
                }
              ]
            }
          }
        },
        {
          "name": "Delete Note",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notes/{{noteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes", "{{noteId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Note deleted successfully\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.message).to.include(\"deleted successfully\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/health",
          "host": ["{{baseUrl}}"],
          "path": ["api", "health"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Health check successful\", function () {",
              "    pm.response.to.have.status(200);",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson.status).to.equal(\"OK\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}
